var API_URL = 'http://www.qmodel.cn:4566/api',
  FILE_SERVE_URL =
    'http://www.qmodel.cn:9107/resourceHandle/file/downloadByPath',
  FILE_SERVE_URL_UP =
    'http://www.qmodel.cn:9107/resourceHandle/ng/upload?path\x3d',
  FILE_SERVE_URL2 = 'http://www.qmodel.cn/file',
  DemoUser = '20191205',
  DemoPwd = '20191205',
  ID_TOKEN = 'id_token',
  USER_ID = 'user_id',
  TOKEN_TIME = 'TOKEN_TIME',
  IS_DEBUG = 0,
  ontToken = null,
  NetHandle = function (a) {
    this.CURRENT_MODEL_ID = this._0xC9 = null
    this.MDV = !1
    var c = localStorage.getItem(TOKEN_TIME)
    c
      ? 12 <
          new Date(new Date().getTime() - new Date(c).getTime()).getHours() &&
        this.clear_TOKEN()
      : this.clear_TOKEN()
    a
      ? (this.WEB_TOKEN = a)
      : 'null' != localStorage.getItem(ID_TOKEN) &&
        ((this.WEB_TOKEN = localStorage.getItem(ID_TOKEN)),
        (this.WEB_USER_ID = localStorage.getItem(USER_ID)))
  }
NetHandle.prototype = {
  _0xA07: function () {
    return 'Bearer ' + this.WEB_TOKEN
  },
  get_VUE_TOKEN_HEAD: function () {
    return {
      headers: {
        Authorization: 'Bearer ' + this.WEB_TOKEN,
        Accept: 'application/json',
      },
    }
  },
  get_TOKEN: function () {
    return this.WEB_TOKEN
  },
  clear_TOKEN: function () {
    localStorage.removeItem(ID_TOKEN)
    localStorage.removeItem(USER_ID)
    $.cookie(ID_TOKEN, null, { path: '/' })
    this.WEB_TOKEN = null
    $.cookie(USER_ID, null, { path: '/' })
    this.WEB_USER_ID = null
  },
  _0xA08: function () {
    return this._0xC9
  },
  getModels: function (a) {
    var c = this,
      e = API_URL + '/rvt-files?page\x3d0\x26size\x3d' + (a ? a : 100)
      console.log('福建省立方', e);
    return new Promise(function (a, d) {
      $.ajax({
        cache: !1,
        url: e,
        type: 'GET',
        beforeSend: function (b) {
          b.setRequestHeader('Authorization', c._0xA07())
        },
        success: function (b) {
          console.log(b)
          for (var c = [], d = 0; d < b.length; d++)
            0 === b[d].isDelete && c.push(b[d].fileName)
          a(c)
        },
        error: function (b, a, c) {
          d(a)
        },
      })
    })
  },
  // 获取token, 并存储token和username
  getToken: function (a, c) {
    var e = this
    return new Promise(function (f, d) {
      if (null != e.WEB_TOKEN) f(1)
      else {
        var b = {
          username: a ? a : DemoUser,
          password: a ? c : DemoPwd,
          rememberMe: null,
        }
        $.ajax({
          cache: !1,
          url: API_URL + '/authenticate',
          type: 'POST',
          contentType: 'application/json;charset\x3dUTF-8',
          data: JSON.stringify(b),
          success: function (a) {
            console.log(a)
            localStorage.setItem(ID_TOKEN, a.id_token)
            e.WEB_TOKEN = a.id_token
            localStorage.setItem(USER_ID, b.username)
            e.WEB_USER_ID = b.username
            localStorage.setItem(TOKEN_TIME, new Date())
            f(1)
          },
          error: function (b, a, c) {
            401 == a && alert('\u5bc6\u7801\u9519\u8bef\u3002')
            d(0)
          },
        })
      }
    })
  },
  postFileInfo: function (a, c, e, f, d) {
    var b = {
        expType: 1,
        fileName: a,
        filePath: c,
        fileSize: e,
        fileId: d,
        id: 0,
        isDelete: 0,
        userId: f,
      },
      h = this,
      g = API_URL + '/rvt-src-files'
    return new Promise(function (a, c) {
      $.ajax({
        cache: !1,
        url: g,
        type: 'PUT',
        contentType: 'application/json;charset\x3dUTF-8',
        data: JSON.stringify(b),
        beforeSend: function (b) {
          b.setRequestHeader('Authorization', h._0xA07())
        },
        success: function (b) {
          a(1)
        },
        error: function (b, a, d) {
          c(a)
        },
      })
    })
  },
  uploadFile: function (a, c) {
    var e = this
    return new Promise(function (f, d) {
      var b = new FormData()
      b.append('file', a)
      b.append('service', 'App.Passion.UploadFile')
      var h = '/' + localStorage.getItem(USER_ID) + '/rvt/',
        g = { name: 'file' }
      g.filename = a.filename
      $.ajax({
        url: FILE_SERVE_URL_UP + h + '\x26needTimeStamp\x3d1',
        type: 'post',
        data: b,
        contentType: !1,
        processData: !1,
        headers: g,
        xhr: function () {
          var b = new XMLHttpRequest()
          b.upload.addEventListener('progress', c)
          return b
        },
        success: function (b) {
          console.log(b)
          'success' == b.status
            ? e
                .postFileInfo(
                  b.result[0].fileName,
                  b.result[0].filePath,
                  b.result[0].fileSize,
                  localStorage.getItem(USER_ID),
                  b.result[0].id
                )
                .then(function (b) {
                  f(1)
                })
            : f(0)
        },
      })
    })
  },
  _0xA09_new: function (a) {
    return 1 == IS_DEBUG
      ? FILE_SERVE_URL2 + '/' + this.WEB_USER_ID + '/' + this._0xC9 + '/' + a
      : FILE_SERVE_URL + '/' + this.WEB_USER_ID + '/' + this._0xC9 + '/' + a
  },
  _0x3B1: function (a, c) {
    var e = { docId: a, fileId: this._0xC9, uniqueId: c },
      f = this,
      d = API_URL + '/pty-saves-getone'
    return new Promise(function (b, a) {
      $.ajax({
        cache: !1,
        url: d,
        type: 'POST',
        contentType: 'application/json;charset\x3dUTF-8',
        data: JSON.stringify(e),
        beforeSend: function (b) {
          b.setRequestHeader('Authorization', f._0xA07())
        },
        success: function (a) {
          b(a.prmgs)
        },
        error: function (b, c, d) {
          a(c)
        },
      })
    })
  },
  getModel: function (a) {
    var c = this,
      e = API_URL + '/rvt-files-byname/' + a
    return new Promise(function (f, d) {
      $.ajax({
        cache: !1,
        url: e,
        type: 'GET',
        beforeSend: function (b) {
          b.setRequestHeader('Authorization', c._0xA07())
        },
        success: function (b) {
          console.log(b)
          c._0xC9 = b.fileId
          c.CURRENT_MODEL_ID = c.WEB_USER_ID + '-\x3e' + a
          c.MDV = '1' == b.ex1
          f(FILE_SERVE_URL + b.filePath)
        },
        error: function (b, a, c) {
          d(a)
        },
      })
    })
  },
  saveSche: function (a, c) {
    var e = {
        actPlanDate: c,
        actfinishDate: c,
        finishDate: c,
        planDate: c,
        rvtId: this.CURRENT_MODEL_ID,
        taskName: a,
        id: 0,
      },
      f = this,
      d = API_URL + '/task-mgrs'
    return new Promise(function (b, a) {
      $.ajax({
        cache: !1,
        url: d,
        type: 'PUT',
        contentType: 'application/json;charset\x3dUTF-8',
        data: JSON.stringify(e),
        beforeSend: function (b) {
          b.setRequestHeader('Authorization', f._0xA07())
        },
        success: function (a) {
          b(1)
        },
        error: function (b, c, d) {
          a(0)
        },
      })
    })
  },
  getSche: function () {
    var a = this,
      c = API_URL + '/task-mgrs-by-fileid?fileid\x3d' + this.CURRENT_MODEL_ID
    return new Promise(function (e, f) {
      $.ajax({
        cache: !1,
        url: c,
        type: 'GET',
        beforeSend: function (c) {
          c.setRequestHeader('Authorization', a._0xA07())
        },
        success: function (a) {
          console.log(a)
          e(a)
        },
        error: function (a, b, c) {
          f(b)
        },
      })
    })
  },
  DelSche: function (a) {
    var c = this,
      e = API_URL + '/task-mgrs/' + a
    return new Promise(function (a, d) {
      $.ajax({
        cache: !1,
        url: e,
        type: 'DELETE',
        contentType: 'application/json;charset\x3dUTF-8',
        beforeSend: function (b) {
          b.setRequestHeader('Authorization', c._0xA07())
        },
        success: function (b) {
          a(1)
        },
        error: function (b, a, c) {
          d(0)
        },
      })
    })
  },
  BangdingSche: function (a, c) {
    var e = []
    c.forEach(function (b) {
      e.push({ id: 0, compId: b, taskId: a, vtype: 0 })
    })
    var f = this,
      d = API_URL + '/task-and-comps-group'
    return new Promise(function (b, a) {
      $.ajax({
        cache: !1,
        url: d,
        type: 'PUT',
        contentType: 'application/json;charset\x3dUTF-8',
        data: JSON.stringify(e),
        beforeSend: function (b) {
          b.setRequestHeader('Authorization', f._0xA07())
        },
        success: function (a) {
          b(1)
        },
        error: function (b, c, d) {
          a(0)
        },
      })
    })
  },
  getBangdingSche: function (a) {
    var c = this,
      e = API_URL + '/task-and-comps-group?taskId\x3d' + a
    return new Promise(function (a, d) {
      $.ajax({
        cache: !1,
        url: e,
        type: 'GET',
        beforeSend: function (b) {
          b.setRequestHeader('Authorization', c._0xA07())
        },
        success: function (b) {
          console.log(b)
          a(b)
        },
        error: function (b, a, c) {
          d(a)
        },
      })
    })
  },
  saveViewAndImg: function (a, c, e, f) {
    var d = this
    return new Promise(function (b, h) {
      var g = new FormData(),
        k = new Date().getTime() + '.jpg',
        k = new File([f], k, { type: 'image/jpg' })
      g.append('file', k)
      g.append('service', 'App.Passion.UploadFile2')
      var m = '/' + d.WEB_USER_ID + '/' + d._0xC9 + '/img/',
        l = { name: 'file' }
      l.filename = k.filename
      $.ajax({
        url: FILE_SERVE_URL_UP + m + '\x26needTimeStamp\x3d1',
        type: 'post',
        data: g,
        contentType: !1,
        processData: !1,
        headers: l,
        success: function (f) {
          console.log(f)
          'success' == f.status
            ? d.saveView(a, c, e, f.result[0].filePath).then(function (a) {
                b(1)
              })
            : b(0)
        },
      })
    })
  },
  saveView: function (a, c, e, f) {
    var d = {
        fileId: this.CURRENT_MODEL_ID,
        viewName: a,
        viewInfo2: c,
        markInfo: e,
        imageFilePath: f,
        updateDate: new Date(),
        id: 0,
      },
      b = this,
      h = API_URL + '/rvt-views'
    return new Promise(function (a, c) {
      $.ajax({
        cache: !1,
        url: h,
        type: 'PUT',
        contentType: 'application/json;charset\x3dUTF-8',
        data: JSON.stringify(d),
        beforeSend: function (a) {
          a.setRequestHeader('Authorization', b._0xA07())
        },
        success: function (b) {
          a(1)
        },
        error: function (b, a, d) {
          c(0)
        },
      })
    })
  },
  getView: function (a) {
    var c = this
    a = a ? c.WEB_USER_ID + '-\x3e' + a : this.CURRENT_MODEL_ID
    var e = API_URL + '/rvt-views-byfileid?fileid\x3d' + a
    return new Promise(function (a, d) {
      $.ajax({
        cache: !1,
        url: e,
        type: 'GET',
        beforeSend: function (b) {
          b.setRequestHeader('Authorization', c._0xA07())
        },
        success: function (b) {
          console.log(b)
          a(b)
        },
        error: function (b, a, c) {
          d(a)
        },
      })
    })
  },
  getImg: function (a) {
    var c = this
    a = a ? c.WEB_USER_ID + '-\x3e' + a : this.CURRENT_MODEL_ID
    var e = API_URL + '/rvt-firstviews-byfileid?fileid\x3d' + a
    return new Promise(function (a, d) {
      $.ajax({
        cache: !1,
        url: e,
        type: 'GET',
        beforeSend: function (b) {
          b.setRequestHeader('Authorization', c._0xA07())
        },
        success: function (b) {
          console.log(b)
          '0' !== b && (b = FILE_SERVE_URL + b)
          a(b)
        },
        error: function (b, a, c) {
          d(a)
        },
      })
    })
  },
  getViewById: function (a) {
    var c = this,
      e = API_URL + '/rvt-views/' + a
    return new Promise(function (a, d) {
      $.ajax({
        cache: !1,
        url: e,
        type: 'GET',
        beforeSend: function (a) {
          a.setRequestHeader('Authorization', c._0xA07())
        },
        success: function (b) {
          a(b)
        },
        error: function (a, c, e) {
          d(c)
        },
      })
    })
  },
  DelView: function (a) {
    var c = this,
      e = API_URL + '/rvt-views/' + a
    return new Promise(function (a, d) {
      $.ajax({
        cache: !1,
        url: e,
        type: 'DELETE',
        contentType: 'application/json;charset\x3dUTF-8',
        beforeSend: function (a) {
          a.setRequestHeader('Authorization', c._0xA07())
        },
        success: function (b) {
          a(1)
        },
        error: function (a, c, e) {
          d(0)
        },
      })
    })
  },
}
